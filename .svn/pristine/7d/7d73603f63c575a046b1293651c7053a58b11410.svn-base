<?xml version="1.0" encoding="utf-8"?>
<s:ItemRenderer xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:s="library://ns.adobe.com/flex/spark"
				dataChange="{ updateMe(); }" width="100%" height="100%"
				autoDrawBackground="false" xmlns:components="org.techfusion.view.components.*">
	
	<fx:Declarations>
		<s:Animate id="fader" duration="500" repeatBehavior="reverse" repeatCount="0" target="{mainGroup}">
			<s:SimpleMotionPath property="alpha" valueFrom="1.0" valueTo="0.0" />
		</s:Animate>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			// Hash Table class
			import com.developmentarc.core.datastructures.utils.HashTable;
			
			// Embed not referenced Image (Usually directly called by AS3 Code
			// -- Needed for Release Build
			[Embed("/assets/images/queue.png")]
			private const membersImage:Class;
			[Embed("/assets/images/stats.png")]
			private const callImage:Class;
			
			protected function updateMe():void {
				if(data) {
					var object:XML = data as XML;
					
					// Populate Agent Status Values
					var agentStatus:HashTable = new HashTable();
					agentStatus.addItem(1, "Not in Use");
					agentStatus.addItem(2, "In Use");
					agentStatus.addItem(3, "Busy");
					agentStatus.addItem(4, "");
					agentStatus.addItem(5, "Unavailable");
					agentStatus.addItem(6, "Ringing");
					
					// Validate ItemRenderer Components
					agentName.text			= String(object.Name);
					agentQueue.text			= "(" + String(object.Queue) + ")";
					
					// Update Live Calls Counter
					agentCallCounter.badgeText	= String(object.CallsTaken);
					
					// Update Last Taken Call Time
					var date:Date  			= new Date(Number(object.LastCall)*1000);
					agentLastCall.badgeText		= String(date.minutes);
					
					// Validate Labels
					penality.text			= String(object.Penalty);
					status.text				= agentStatus.getItem(Number(object.Status));
					paused.text				= String(object.Paused);
					
					// Change Behaviour
					if(Number(object.Penality) > 0) {
						mainGroup.setStyle("backgroundColor ", 0xF00000);
						mainGroup.alpha = 0.5;
					} else if(Number(object.Paused) > 0) {
						mainGroup.setStyle("backgroundColor ", 0xD57E21);
						mainGroup.alpha = 0.5;
					} else {
						mainGroup.setStyle("backgroundColor ", 0xFFFFFF);
						mainGroup.alpha = 1;
					}
					
				}
			}
		]]>
	</fx:Script>
	
	<s:BorderContainer id="mainGroup" left="5" right="5" top="5" bottom="5" borderWeight="0" cornerRadius="0"
					   skinClass="assets.skins.CustomBorderContainerSkin">
		
		<s:layout>
			<s:HorizontalLayout verticalAlign="middle" horizontalAlign="center" gap="5"
						paddingBottom="10" paddingLeft="10" paddingRight="15" paddingTop="10"/>
		</s:layout>
		
		<s:VGroup id="lblGroup" width="80%" height="80" horizontalAlign="left" verticalAlign="middle">
			
			<s:VGroup width="100%" height="80%" horizontalAlign="left" verticalAlign="middle"
					  paddingBottom="0" paddingLeft="5" paddingRight="5" paddingTop="0">
				
				<s:Label id="agentName" fontFamily="Ubuntu" fontSize="18" fontWeight="bold" text="Agent"
						 maxDisplayedLines="1" maxWidth="{ lblGroup.width - 5 }" color="#9C9C9C"/>
				<s:Label id="agentQueue" fontFamily="Ubuntu" fontSize="12" fontWeight="normal" text="(queue)"
						 maxDisplayedLines="1" maxWidth="{ lblGroup.width - 5 }" color="#9C9C9C"/>
				
			</s:VGroup>
		
			<s:HGroup width="100%" height="20%" gap="5" horizontalAlign="left" paddingBottom="0"
					  paddingLeft="5" paddingRight="5" paddingTop="0" verticalAlign="top">
				
				<s:Label fontFamily="Ubuntu" fontSize="12" fontWeight="bold" text="Pn: " color="#9C9C9C"/>
				<s:Label fontFamily="Ubuntu" fontSize="12" id="penality" color="#9C9C9C"/>
				<s:Label fontFamily="Ubuntu" fontSize="12" fontWeight="bold" text="St: " color="#9C9C9C"/>
				<s:Label fontFamily="Ubuntu" fontSize="12" id="status" color="#9C9C9C"/>
				<s:Label fontFamily="Ubuntu" fontSize="12" fontWeight="bold" text="Ps: " color="#9C9C9C"/>
				<s:Label fontFamily="Ubuntu" fontSize="12" id="paused" color="#9C9C9C"/>
			</s:HGroup>
		</s:VGroup>
		
		<s:Group>
			<s:layout>
				<s:VerticalLayout horizontalAlign="center" verticalAlign="middle"
								  paddingBottom="2" paddingLeft="2" paddingRight="2" paddingTop="2"/>
			</s:layout>
			
			<components:BadgeButton id="agentLastCall"    srcImage="/assets/images/queue.png"  baseFontSize="10"/>
			<components:BadgeButton id="agentCallCounter" srcImage="/assets/images/stats.png"  baseFontSize="10"/>
			
		</s:Group>
		
	</s:BorderContainer>
	
</s:ItemRenderer>
