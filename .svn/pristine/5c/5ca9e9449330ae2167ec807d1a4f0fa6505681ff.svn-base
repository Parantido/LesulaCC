package org.techfusion.controller {
	
	// Import PureMVC Model Classes
	import flash.utils.getDefinitionByName;
	import flash.utils.getQualifiedClassName;
	
	import mx.utils.ObjectUtil;
	
	import org.puremvc.as3.interfaces.ICommand;
	import org.puremvc.as3.interfaces.INotification;
	import org.puremvc.as3.patterns.command.SimpleCommand;
	import org.techfusion.events.AsteriskEvent;
	import org.techfusion.model.proxies.AsteriskManagerInterfaceProxy;
	
	public class AsteriskCommand extends SimpleCommand implements ICommand {
		
		public function AsteriskCommand() {
		}
		
		override public function execute(notification:INotification):void {
			
			// Retrieve Asterisk Command
			var astCmdType:String = notification.getType() as String;
			
			// Retrieve Asterisk Command Body
			var astCmdBody:Object = null;
			if(notification.getBody() && getQualifiedClassName(notification.getBody()) != "String") {
				astCmdBody = AsteriskEvent(notification.getBody()).getCommandData() as Object;
			} else {
				astCmdBody = notification.getBody();
			}
			
			// Retrieve Asterisk Proxy
			var mgrTopologyProxy:AsteriskManagerInterfaceProxy = 
				facade.retrieveProxy(AsteriskManagerInterfaceProxy.NAME) as AsteriskManagerInterfaceProxy;
			
			// Check What to Do
			switch(astCmdType) {
				case ApplicationFacade.DOCONF:
					// Hangup Channel
					mgrTopologyProxy.doInitialConfigRequest();
					break;
				case ApplicationFacade.PARK:
					// Hangup Channel
					mgrTopologyProxy.chanPark(String(astCmdBody.Channel), String(astCmdBody.RetChannel));
					break;
				case ApplicationFacade.HANGUP:
					// Hangup Channel
					mgrTopologyProxy.chanHangup(astCmdBody as String);
					break;
				case ApplicationFacade.GET_PEERS:
					// Fire UP SIP Peers Query
					mgrTopologyProxy.getPeers();
					break;
				case ApplicationFacade.GET_QUEUES:
					// Retrieve Queues List
					mgrTopologyProxy.getQueues();
					break;
				case ApplicationFacade.GET_QUEUE_STATUS:
					// Retrieve Specific Queue Status
					mgrTopologyProxy.getQueueStatus(String(astCmdBody));
					break;
				case ApplicationFacade.GET_QUEUE_SUMMAR:
					// Retrieve Specific Queue Summary
					mgrTopologyProxy.getQueueSummary(String(astCmdBody));
					break;
			}
			
			// Debug
			//trace("AsteriskCommand ==> Executed Asterisk Command: " + astCmdType);
		}
	}
}